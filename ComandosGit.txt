git init ‘arranca el repositorio’ 
git clone (url) 'crea una copia del master al directorio de trabajo y crea base de datos de todos los cambios historicos'
git add (nombre de archivo) ‘Arranca el archivo’ 
git commit -m ‘Envía los últimos datos del archivo a la base de datos del sistema de control de versiones’ 
git push ‘envia informacion de repositorio local a repositorio remoto’ 
git pull ‘trae de un repositorio remoto’ 
git status ‘Status de la base de datos’ 
git show ‘muestra el historial de los cambios realizados, cuando y quien los hizo’ 
git log ‘historia entera del archivo’ 
git fetch 'trae a un repositorio local pero no se copia en los archivos'
git merge (nombre de la otra ramo que se quiere fusionar) 'fusiona ultima version del repositorio local con la version actual '
git config --global --edit 'edita las configuraciones de nombre de usuario, email, etc'
git checkout (codigo/rama) 'permite revisar cualquier commit'
git checkout master 'visualiza ultimo commit'
git reset (codigo) --hard 'borra el commit y staging'
git reset (codigo) --soft 'borra el commit y deja el staying'
git diff (codigo1 codigo2) diferencia entre commits
git reset HEAD 'permite revertir los cambios que ya habías preparado para subir'
git rm 'ayuda a eliminar archivos de Git sin eliminar su historial del sistema de versiones'
git revert 'deshace cambios de confirmaciones anteriores de forma segura sin modificar la historia del repositorio'
git branch (nombre de rama) 'crea una nueva rama'
git branch -m 'cambia de nombre a la rama'
git diff 'diferencias entre el directorio actual y el staging'
git remote add origin main 'agrega un origen remoto de los archivos'
git remote -v
git remote add upstream (url) 'trae datos del repositorio remoto a la rama main local y crea rama upstream'
git rebase 'realiza merge de ramas pero borra una de las ramas y no se toma en cuenta en el historial'
git stash 'se guardan los cambios en un lugar temporal'
git stash list 'muestra la lista de cambios guardados temporalmente'
git stash pop 'para retomar cambios temporales guardados'
git stash branch 'crea una rama con cambios guardados temporalmente'
git stash drop 'eliminar cambios temporales'
git clean --dry-run 'simula lo que se va a borrar sin borrarlos'
git clean -f 'borra archivos'
git pull upstream main
git pull origin main --allow-unrelated/histories 'ayuda a ejecutar el merge sin conflictos entre archivos remotos y locales'
git log --all --graph --decorate --oneline 'crea un arbol de commits'
vi blogpost.html

Vim es un editor de texto de Git.
i 'para insetar en Vim'
:wq 'para escribir y salir'
En la carpeta master colocar checkout
